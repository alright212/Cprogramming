/*Kasuta ühebaidist char-i või 2 baidist short-i
• Lihtsamad manipulatsioonid:
• Maski 3 kasutaja poolt öeldud bitti üheks
• Maski 2 kasutaja poolt öeldud bitti nulliks
• Pööra kahe kasutaja poolt öeldud biti väärtus vastupidiseks
• Biti väärtuse tuvastamine
• Tuvasta kas kasutaja poolt öeldud bitt on 0 või 1
• Tuvasta, kas arv on positiivne või negatiivne • Tuvasta, kas arv on paaris või paaritu*/
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

void printBits(unsigned char c)
{
    int i;
    for(i = 7; i >= 0; i--)
    {
        printf("%d", (c >> i) & 1);
    }
    printf("\n");
}

unsigned char mask3(unsigned char c, int pos)
{
    unsigned char mask = 1 << pos;
    return c | mask;
}

unsigned char mask2(unsigned char c, int pos)
{
    unsigned char mask = 1 << pos;
    return c & ~mask;
}

unsigned char reverse(unsigned char c, int pos1, int pos2)
{
    unsigned char mask1 = 1 << pos1;
    unsigned char mask2 = 1 << pos2;
    unsigned char bit1 = c & mask1;
    unsigned char bit2 = c & mask2;
    unsigned char newBit1 = bit2 >> pos1;
    unsigned char newBit2 = bit1 >> pos2;
    unsigned char newC = c & ~mask1;
    newC = newC & ~mask2;
    newC = newC | newBit1;
    newC = newC | newBit2;
    return newC;
}

int bitValue(unsigned char c, int pos)
{
    unsigned char mask = 1 << pos;
    unsigned char bit = c & mask;
    return bit >> pos;
}

int isPositive(unsigned char c)
{
    unsigned char mask = 1 << 7;
    unsigned char bit = c & mask;
    return bit >> 7;
}

int isEven(unsigned char c)
{
    unsigned char mask = 1 << 0;
    unsigned char bit = c & mask;
    return bit >> 0;
}

int main()
{
    unsigned char c;
    int pos1, pos2;
    printf("Enter a character: ");
    scanf("%c", &c);
    printf("Enter a position: ");
    scanf("%d", &pos1);
    printf("Enter another position: ");
    scanf("%d", &pos2);
    printf("\n");
    printf("The character in bits is: ");
    printBits(c);
    printf("\n");
    printf("The character with the bit at position %d masked to 1 is: ", pos1);
    printBits(mask3(c, pos1));
    printf("\n");
    printf("The character with the bit at position %d masked to 0 is: ", pos2);
    printBits(mask2(c, pos2));
    printf("\n");
    printf("The character with the bits at positions %d and %d reversed is: ", pos1, pos2);
    printBits(reverse(c, pos1, pos2));
    printf("\n");
    printf("The value of the bit at position %d is: %d\n", pos1, bitValue(c, pos1));
    printf("The value of the bit at position %d is: %d\n", pos2, bitValue(c, pos2));
    printf("\n");
    printf("The character is %s\n", isPositive(c) ? "positive" : "negative");
    printf("The character is %s\n", isEven(c) ? "even" : "odd");
    return 0;
}
