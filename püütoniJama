
def find_id_code(text):
    numbers = []
    for char in text:
        if char.isdigit():
            numbers.append(char)
    if len(numbers) < 11:
        return 'Not enough numbers!'
    elif len(numbers) > 11:
        return 'Too many numbers!'
    else:
        return ''.join(numbers)



def check_year_number(year_number):
    if year_number < 0 or year_number > 99:
        return False
    else:
        return True


def check_month_number(month_number):
    if month_number < 0 or month_number > 12:
        return False
    else:
        return True



def is_valid_birth_number(birth_number: int):
    if birth_number < 0 or birth_number > 999:
        return False
    else:
        return True



def get_full_year(gender_number: int, year_number: int) -> int:
    if gender_number == 0:
        return 1800 + year_number
    elif gender_number == 1:
        return 1900 + year_number
    elif gender_number == 2:
        return 2000 + year_number
    elif gender_number == 3:
        return 2100 + year_number
    elif gender_number == 4:
        return 2200 + year_number
    elif gender_number == 5:
        return 1800 + year_number
    elif gender_number == 6:
        return 1900 + year_number
    elif gender_number == 7:
        return 2000 + year_number
    elif gender_number == 8:
        return 2100 + year_number
    elif gender_number == 9:
        return 2200 + year_number


def is_valid_control_number(id_code: str) -> bool:
    control_number = int(id_code[-1])
    weight = [1, 2, 3, 4, 5, 6, 7, 8, 9, 1]
    sum = 0
    for i in range(len(id_code) - 1):
        sum += int(id_code[i]) * weight[i]
    if sum % 11 == 10:
        return control_number == 0
    else:
        return control_number == sum % 11



def is_valid_day_number(gender_number: int, year_number: int, month_number: int, day_number: int) -> bool:
    if month_number == 2:
        if is_leap_year(get_full_year(gender_number, year_number)):
            return day_number > 0 and day_number < 30
        else:
            return day_number > 0 and day_number < 29
    elif month_number == 1 or month_number == 3 or month_number == 5 or month_number == 7 or month_number == 8 or month_number == 10 or month_number == 12:
        return day_number > 0 and day_number < 32
    else:
        return day_number > 0 and day_number < 31



def is_id_valid(id_code: str) -> bool:
    if len(id_code) != 11:
        return False
    else:
        gender_number = int(id_code[0])
        year_number = int(id_code[1:3])
        month_number = int(id_code[3:5])
        day_number = int(id_code[5:7])
        birth_number = int(id_code[7:10])
        control_number = int(id_code[-1])
        if check_year_number(year_number) and check_month_number(month_number) and is_valid_birth_number(birth_number) and is_valid_control_number(id_code) and is_valid_day_number(gender_number, year_number, month_number, day_number):
            return True
        else:
            return False


def get_data_from_id(id_code: str) -> str:
    gender_number = int(id_code[0])
    year_number = int(id_code[1:3])
    month_number = int(id_code[3:5])
    day_number = int(id_code[5:7])
    birth_number = int(id_code[7:10])
    control_number = int(id_code[-1])
    if gender_number == 0 or gender_number == 5:
        gender = 'male'
    elif gender_number == 1 or gender_number == 6:
        gender = 'female'
    elif gender_number == 2 or gender_number == 7:
        gender = 'male'
    elif gender_number == 3 or gender_number == 8:
        gender = 'female'
    elif gender_number == 4 or gender_number == 9:
        gender = 'male'
    if birth_number >= 0 and birth_number <= 499:
        location = 'Tartu'
    elif birth_number >= 500 and birth_number <= 799:
        location = 'Tallinn'
    elif birth_number >= 800 and birth_number <= 999:
        location = 'Narva'
    return 'This is a ' + gender + ' born on ' + str(day_number) + '.' + str(month_number) + '.' + str(get_full_year(gender_number, year_number)) + ' in ' + location + '.'

if __name__ == '__main__':
    print("\nFind ID code:")
    print(find_id_code(""))  # -> "Not enough numbers!"
    print(find_id_code("123456789123456789"))  # -> "Too many numbers!"
    print(find_id_code("ID code is: 49403136526"))  # -> "49403136526"
    print(find_id_code("efs4  9   #4aw0h 3r 1a36g5j2!!6-"))  # -> "49403136526"

    print("\nGender number:")
    print(get_gender_number("49403136526"))  # -> 4
    print(get_gender_number("39403136526"))  # -> 3
    print(get_gender_number("59403136526"))  # -> 5

    print("\nYear number:")
    print(get_year_number("49403136526"))  # -> 94
    print(get_year_number("39403136526"))  # -> 94
    print(get_year_number("59403136526"))  # -> 94

    print("\nMonth number:")
    print(get_month_number("49403136526"))  # -> 3
    print(get_month_number("39403136526"))  # -> 3
    print(get_month_number("59403136526"))  # -> 3

    print("\nDay number:")
    print(get_day_number("49403136526"))  # -> 13
    print(get_day_number("39403136526"))  # -> 13
    print(get_day_number("59403136526"))  # -> 13

    print("\nBirth number:")
    print(get_birth_number("49403136526"))  # -> 652
    print(get_birth_number("39403136526"))  # -> 652
    print(get_birth_number("59403136526"))  # -> 652

    print("\nControl number:")
    print(get_control_number("49403136526"))  # -> 6
    print(get_control_number("39403136526"))  # -> 6
    print(get_control_number("59403136526"))  # -> 6

   print("\nDay number:")
    print(is_valid_day_number(4, 5, 12, 25))  # -> True
    print(is_valid_day_number(3, 10, 8, 32))  # -> False
    print("\nFebruary check:")
    print(
        is_valid_day_number(4, 96, 2, 30))  # -> False (February cannot contain more than 29 days in any circumstances)
    print(is_valid_day_number(4, 99, 2, 29))  # -> False (February contains 29 days only during leap year)
    print(is_valid_day_number(4, 8, 2, 29))  # -> True
    print("\nMonth contains 30 or 31 days check:")
    print(is_valid_day_number(4, 22, 4, 31))  # -> False (April contains max 30 days)
    print(is_valid_day_number(4, 18, 10, 31))  # -> True
    print(is_valid_day_number(4, 15, 9, 31))  # -> False (September contains max 30 days)

    print("\nOverall ID check::")
    print(is_id_valid("49808270244"))  # -> True
    print(is_id_valid("12345678901"))  # -> False

    print("\nFull message:")
    print(get_data_from_id("49808270244"))  # -> "This is a female born on 27.08.1998 in Tallinn."
    print(get_data_from_id("60109200187"))  # -> "Given invalid ID code!"
